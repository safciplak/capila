// Code generated by mockery. DO NOT EDIT.

package cache

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockInterfaceGetter is an autogenerated mock type for the InterfaceGetter type
type MockInterfaceGetter struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, key
func (_m *MockInterfaceGetter) Get(ctx context.Context, key interface{}) (interface{}, error) {
	ret := _m.Called(ctx, key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, interface{}) interface{}); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, interface{}) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockInterfaceGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockInterfaceGetter creates a new instance of MockInterfaceGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockInterfaceGetter(t mockConstructorTestingTNewMockInterfaceGetter) *MockInterfaceGetter {
	mock := &MockInterfaceGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
