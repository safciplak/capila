// Code generated by mockery. DO NOT EDIT.

package helpers

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockInterfaceTimeHelper is an autogenerated mock type for the InterfaceTimeHelper type
type MockInterfaceTimeHelper struct {
	mock.Mock
}

// NewDate provides a mock function with given fields: year, month, day
func (_m *MockInterfaceTimeHelper) NewDate(year int, month time.Month, day int) time.Time {
	ret := _m.Called(year, month, day)

	var r0 time.Time
	if rf, ok := ret.Get(0).(func(int, time.Month, int) time.Time); ok {
		r0 = rf(year, month, day)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// Now provides a mock function with given fields:
func (_m *MockInterfaceTimeHelper) Now() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// NowIn provides a mock function with given fields: locationName, fallbackLocationName
func (_m *MockInterfaceTimeHelper) NowIn(locationName string, fallbackLocationName string) time.Time {
	ret := _m.Called(locationName, fallbackLocationName)

	var r0 time.Time
	if rf, ok := ret.Get(0).(func(string, string) time.Time); ok {
		r0 = rf(locationName, fallbackLocationName)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

type mockConstructorTestingTNewMockInterfaceTimeHelper interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockInterfaceTimeHelper creates a new instance of MockInterfaceTimeHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockInterfaceTimeHelper(t mockConstructorTestingTNewMockInterfaceTimeHelper) *MockInterfaceTimeHelper {
	mock := &MockInterfaceTimeHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
