// Code generated by mockery. DO NOT EDIT.

package helpers

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MockInterfaceRequestHelper is an autogenerated mock type for the InterfaceRequestHelper type
type MockInterfaceRequestHelper struct {
	mock.Mock
}

// Request provides a mock function with given fields: ctx, method, url, body, headers
func (_m *MockInterfaceRequestHelper) Request(ctx context.Context, method string, url string, body io.Reader, headers map[string]string) ([]byte, error) {
	ret := _m.Called(ctx, method, url, body, headers)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, string, string, io.Reader, map[string]string) []byte); ok {
		r0 = rf(ctx, method, url, body, headers)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, io.Reader, map[string]string) error); ok {
		r1 = rf(ctx, method, url, body, headers)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockInterfaceRequestHelper interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockInterfaceRequestHelper creates a new instance of MockInterfaceRequestHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockInterfaceRequestHelper(t mockConstructorTestingTNewMockInterfaceRequestHelper) *MockInterfaceRequestHelper {
	mock := &MockInterfaceRequestHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
